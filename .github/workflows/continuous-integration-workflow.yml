name: RLI continuous integration workflow
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - run: make ci-cd
      - run: make integration-test

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - run: make ci-cd
      - run: make lint

  test:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - run: make ci-cd
      - run: make test
      - uses: warchant/setup-sonar-scanner@v1
      - run: sonar-scanner -X
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.branch.name=${GITHUB_REF##*/}
          -Dsonar.scm.revision=$(git rev-parse --short "$GITHUB_SHA")
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.organization=luke-shay
          -Dsonar.projectKey=rli
          -Dsonar.projectName=rli
          -Dsonar.sources=rli/
          -Dsonar.tests=tests/
          -Dsonar.exclusions=**/cli.py,**/cmd_smoke.py
          -Dsonar.python.xunit.reportPath=test_output/test-report.xml
          -Dsonar.python.coverage.reportPaths=test_output/coverage.xml

  publish:
    runs-on: ubuntu-latest
    needs: [build, lint, test]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - run: make ci-cd
      - run: test `make latest-version` != `make local-version` && poetry publish --username '${{ secrets.PYPI_USERNAME }}' --password '${{ secrets.PYPI_PASSWORD }}' --build
      - uses: ncipollo/release-action@v1
        with:
          bodyFile: "CHANGELOG.md"
          token: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: [build, lint, test]
    steps:
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ secrets.DOCKER_HUB_USERNAME }}/rli
          tag_with_ref: true
          tag_with_sha: true
